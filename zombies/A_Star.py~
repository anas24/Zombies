import pygame
from object_classes import *
from tileC import Tile

def A_Star(screen, survivor):
    
    N = -18
    S = 18
    E = 1
    W = -1

    NW = -19
    NE = -17
    SE = 19
    SW = 17

    def get_surrounding_tiles(base_node):
        
        array =(
            (base_node.number + N),
            (base_node.number + NE),
            (base_node.number + E),
            (base_node.number + SE),
            (base_node.number + S),
            (base_node.number + SW),
            (base_node.number + W),
            (base_node.number + NW),
            )

        tiles = []

        for tile_number in array:

            surrounding_tile = Tile.get_tile(tile_number)

            if surrounding_tile.walkable and surrounding_tile not in closed_list:
                tiles.append(surrounding_tile)
   return tiles

    def G(tile):
        
        diff = tile.number - tile.parent.number

        if diff in (N, S, E, W):
            tile.G = tile.parent.G + 10
        elif diff in (NE, NW, SW, SE):
            tile.G = tile.parent.G + 14

    def H():
        for tile in Tile.List:
            tile.H = 10 * (abs(tile.x - survivor.x) + abs(tile.y - survivor.y)) / Tile.width

    def F(tile):
        # F = G + H
        tile.F = tile.G + tile.H

    def swap(tile):
        open_list.remove(tile)
        closed_list.append(tile)

    for zombie in Zombie.List:

        open_list = []
        closed_list = []

        zombie_tile = zombie.get_tile()
        open_list.append(zombie_tile)

        surrounding_nodes = get_surrounding_tiles(zombie_tile)

        for node in surrounding_nodes:
            node.parent = zombie_tile
            open_list.append(node)      

        swap(zombie_tile)

        H()
	
        for node in surrounding_nodes:
            G(node)
            F(node)
